/*
==================================================================
Stored Procedure: load_bronze
==================================================================
Purpose:
  This stored procedure is designed to populate the 'bronze' schema 
  by loading data from external CSV files into staging tables.

Description:
  - Truncates existing data in each target bronze table.
  - Loads fresh data using the COPY command (bulk insert) from specified CSV file paths.
  - Tracks and displays the number of rows loaded and the time taken for each table.

Note:
  Ensure the file paths are accessible to the database server and the format is correct.
Usage Example:
  CALL bronze.load_bronze();
*/





CREATE OR REPLACE PROCEDURE bronze.load_bronze()
LANGUAGE plpgsql
AS $$
DECLARE
    rows_loaded INT;
    start_time TIMESTAMP;
    end_time TIMESTAMP;
BEGIN
    RAISE NOTICE 'Loading bronze layer';
    RAISE NOTICE '-------------------------------------------';
    RAISE NOTICE 'Loading CRM tables';
    RAISE NOTICE '-------------------------------------------';

    -- crm_cust_info
    RAISE NOTICE 'Loading bronze.crm_cust_info';
    start_time := clock_timestamp();
    TRUNCATE TABLE bronze.crm_cust_info;
    COPY bronze.crm_cust_info(cst_id, cst_key, cst_firstname, cst_lastname, cst_marital_status, cst_gndr, cst_create_date)
    FROM 'C:/Users/AbdelKaderTalaat/OneDrive - LikeCard/Desktop/DWH/cust_info.csv'
    DELIMITER ',' CSV HEADER;
    end_time := clock_timestamp();
    GET DIAGNOSTICS rows_loaded = ROW_COUNT;
    RAISE NOTICE 'bronze.crm_cust_info: % rows loaded.', rows_loaded;
    RAISE NOTICE 'Start: %, End: %, Duration: % seconds', start_time, end_time, EXTRACT(EPOCH FROM (end_time - start_time));
    RAISE NOTICE '==========================================';

    -- crm_prd_info
    RAISE NOTICE 'Loading bronze.crm_prd_info';
    start_time := clock_timestamp();
    TRUNCATE TABLE bronze.crm_prd_info;
    COPY bronze.crm_prd_info(prd_id, prd_key, prd_nm, prd_cost, prd_line, prd_start_dt, prd_end_dt)
    FROM 'C:/Users/AbdelKaderTalaat/OneDrive - LikeCard/Desktop/DWH/prd_info.csv'
    DELIMITER ',' CSV HEADER;
    end_time := clock_timestamp();
    GET DIAGNOSTICS rows_loaded = ROW_COUNT;
    RAISE NOTICE 'bronze.crm_prd_info: % rows loaded.', rows_loaded;
    RAISE NOTICE 'Start: %, End: %, Duration: % seconds', start_time, end_time, EXTRACT(EPOCH FROM (end_time - start_time));
    RAISE NOTICE '==========================================';

    -- crm_sales_details
    RAISE NOTICE 'Loading bronze.crm_sales_details';
    start_time := clock_timestamp();
    TRUNCATE TABLE bronze.crm_sales_details;
    COPY bronze.crm_sales_details(sls_ord_num, sls_prd_key, sls_cust_id, sls_order_dt, sls_ship_dt, sls_due_dt, sls_sales, sls_quantity, sls_price)
    FROM 'C:/Users/AbdelKaderTalaat/OneDrive - LikeCard/Desktop/DWH/sales_details.csv'
    DELIMITER ',' CSV HEADER;
    end_time := clock_timestamp();
    GET DIAGNOSTICS rows_loaded = ROW_COUNT;
    RAISE NOTICE 'bronze.crm_sales_details: % rows loaded.', rows_loaded;
    RAISE NOTICE 'Start: %, End: %, Duration: % seconds', start_time, end_time, EXTRACT(EPOCH FROM (end_time - start_time));
    RAISE NOTICE '==========================================';

    RAISE NOTICE 'Loading ERP tables';
    RAISE NOTICE '-------------------------------------------';

    -- erp_cust_az12
    RAISE NOTICE 'Loading bronze.erp_cust_az12';
    start_time := clock_timestamp();
    TRUNCATE TABLE bronze.erp_cust_az12;
    COPY bronze.erp_cust_az12(CID, BDATE, GEN)
    FROM 'C:/Users/AbdelKaderTalaat/OneDrive - LikeCard/Desktop/DWH/CUST_AZ12.csv'
    DELIMITER ',' CSV HEADER;
    end_time := clock_timestamp();
    GET DIAGNOSTICS rows_loaded = ROW_COUNT;
    RAISE NOTICE 'bronze.erp_cust_az12: % rows loaded.', rows_loaded;
    RAISE NOTICE 'Start: %, End: %, Duration: % seconds', start_time, end_time, EXTRACT(EPOCH FROM (end_time - start_time));
    RAISE NOTICE '==========================================';

    -- erp_loc_a101
    RAISE NOTICE 'Loading bronze.erp_loc_a101';
    start_time := clock_timestamp();
    TRUNCATE TABLE bronze.erp_loc_a101;
    COPY bronze.erp_loc_a101(CID, CNTRY)
    FROM 'C:/Users/AbdelKaderTalaat/OneDrive - LikeCard/Desktop/DWH/LOC_A101.csv'
    DELIMITER ',' CSV HEADER;
    end_time := clock_timestamp();
    GET DIAGNOSTICS rows_loaded = ROW_COUNT;
    RAISE NOTICE 'bronze.erp_loc_a101: % rows loaded.', rows_loaded;
    RAISE NOTICE 'Start: %, End: %, Duration: % seconds', start_time, end_time, EXTRACT(EPOCH FROM (end_time - start_time));
    RAISE NOTICE '==========================================';

    -- erp_px_cat_g1v2
    RAISE NOTICE 'Loading bronze.erp_px_cat_g1v2';
    start_time := clock_timestamp();
    TRUNCATE TABLE bronze.erp_px_cat_g1v2;
    COPY bronze.erp_px_cat_g1v2(ID, CAT, SUBCAT, MAINTENANCE)
    FROM 'C:/Users/AbdelKaderTalaat/OneDrive - LikeCard/Desktop/DWH/PX_CAT_G1V2.csv'
    DELIMITER ',' CSV HEADER;
    end_time := clock_timestamp();
    GET DIAGNOSTICS rows_loaded = ROW_COUNT;
    RAISE NOTICE 'bronze.erp_px_cat_g1v2: % rows loaded.', rows_loaded;
    RAISE NOTICE 'Start: %, End: %, Duration: % seconds', start_time, end_time, EXTRACT(EPOCH FROM (end_time - start_time));
    RAISE NOTICE '==========================================';

EXCEPTION
    WHEN OTHERS THEN
        RAISE NOTICE 'Error loading Bronze layer: %', SQLERRM;
END;
$$;
